{"version":3,"file":"static/js/387.b2b38d63.chunk.js","mappings":"2NACA,EAAuB,yB,SCKVA,EAAa,WACxB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAE/B,OACE,4BACE,SAAC,KAAD,CAASC,UAAWC,EAAUC,GAAG,IAAjC,kBAGCL,IACC,SAAC,KAAD,CAASG,UAAWC,EAAUC,GAAG,YAAjC,yBAMP,E,UCpBD,EAA0B,0BAA1B,EAA+D,2BCKlDC,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOR,EAAAA,EAAAA,IAAYS,EAAAA,IAEzB,OACE,iBAAKP,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,sBAAsCK,EAAKE,SAC3C,mBAAQC,KAAK,SAASC,QAAS,kBAAMN,GAASO,EAAAA,EAAAA,MAAf,EAA/B,sBAKL,ECjBD,EAAuB,sBCEVC,EAAU,WACrB,OACE,4BACE,SAAC,KAAD,CAASZ,UAAWC,EAAUC,GAAG,YAAjC,uBAGA,SAAC,KAAD,CAASF,UAAWC,EAAUC,GAAG,SAAjC,sBAKL,ECbD,EAAyB,uBCOZW,EAAS,WACpB,IAAMhB,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAE/B,OACE,oBAAQC,UAAWC,EAAnB,WACE,SAACL,EAAD,IACCC,GAAa,SAACM,EAAD,KAAe,SAACS,EAAD,MAGlC,E,kDCsBD,EA7Be,WACb,IAAME,GAAQhB,EAAAA,EAAAA,IAAYiB,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAAA,MAAYH,EACb,GAAE,CAACA,IAOJ,OACE,iCACE,SAACD,EAAD,KACA,2BACE,SAAC,EAAAK,SAAD,CACEC,UACE,SAACC,EAAA,EAAD,CAAYC,MAAM,UAAUC,KAAM,IAAKC,YAXhC,CACfC,QAAS,QACTC,OAAQ,YAOJ,UAKE,SAAC,KAAD,SAGJ,SAAC,KAAD,MAGL,C,sKCnCYC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBhB,EAAc,SAAAY,GAAK,OAAIA,EAAMC,SAASd,KAAnB,EAEnBkB,EAAoB,SAAAL,GAAK,OAAIA,EAAMM,MAAV,EAEzBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACT,EAAgBM,IACjB,SAACJ,EAAUK,GACT,GAAKL,EACL,OAAOA,EAASK,QAAO,SAAAG,GAAO,OAC5BA,EAAQ5B,KAAK6B,cAAcC,SAASL,EAAOI,cADf,GAG/B,G","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Navigation/Navigation.module.css?4bf2","components/Navigation/Naviagtion.jsx","webpack://goit-react-hw-08-phonebook/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://goit-react-hw-08-phonebook/./src/components/AuthNav/AuthNav.module.css?aff0","components/AuthNav/AuthNav.jsx","webpack://goit-react-hw-08-phonebook/./src/components/AppBar/AppBar.module.css?5623","components/AppBar/AppBar.jsx","components/Layout/Layout.jsx","redux/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Navigation_link__13qe6\",\"active\":\"Navigation_active__1vK5v\"};","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { selectIsLoggedIn } from 'redux/user/selectors';\nimport css from './Navigation.module.css';\n\nexport const Navigation = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  return (\n    <nav>\n      <NavLink className={css.link} to=\"/\">\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink className={css.link} to=\"/contacts\">\n          Phonebook\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"UserMenu_wrapper__YvbMI\",\"username\":\"UserMenu_username__1FENz\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from 'redux/user/operations';\n\nimport css from './UserMenu.module.css';\nimport { selectUser } from 'redux/user/selectors';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.username}>Welcome, {user.name}</p>\n      <button type=\"button\" onClick={() => dispatch(logOut())}>\n        Logout\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"AuthNav_link__1DYPd\",\"active\":\"AuthNav_active__gfkpa\"};","import { NavLink } from 'react-router-dom';\nimport css from './AuthNav.module.css';\n\nexport const AuthNav = () => {\n  return (\n    <div>\n      <NavLink className={css.link} to=\"/register\">\n        Register\n      </NavLink>\n      <NavLink className={css.link} to=\"/login\">\n        Log In\n      </NavLink>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"AppBar_header__6MZ3-\"};","import { useSelector } from 'react-redux';\n\nimport { Navigation } from 'components/Navigation/Naviagtion';\nimport { UserMenu } from '../UserMenu/UserMenu';\nimport { AuthNav } from '../AuthNav/AuthNav';\nimport { selectIsLoggedIn } from 'redux/user/selectors';\nimport css from './AppBar.module.css';\n\nexport const AppBar = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  return (\n    <header className={css.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n","import { AppBar } from 'components/AppBar/AppBar';\nimport { Suspense, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\n\nimport { HashLoader } from 'react-spinners';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { selectError } from 'redux/contacts/selectors';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Layout = () => {\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    toast.error(error);\n  }, [error]);\n\n  const override = {\n    display: 'block',\n    margin: '0 auto',\n  };\n\n  return (\n    <>\n      <AppBar />\n      <main>\n        <Suspense\n          fallback={\n            <HashLoader color=\"#36d7b7\" size={150} cssOverride={override} />\n          }\n        >\n          <Outlet />\n        </Suspense>\n      </main>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Layout;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    if (!contacts) return;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n"],"names":["Navigation","isLoggedIn","useSelector","selectIsLoggedIn","className","css","to","UserMenu","dispatch","useDispatch","user","selectUser","name","type","onClick","logOut","AuthNav","AppBar","error","selectError","useEffect","toast","Suspense","fallback","HashLoader","color","size","cssOverride","display","margin","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilterValue","filter","selectVisibleContacts","createSelector","contact","toLowerCase","includes"],"sourceRoot":""}